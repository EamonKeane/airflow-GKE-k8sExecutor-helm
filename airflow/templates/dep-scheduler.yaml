{{- if .Values.webScheduler.installScheduler -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "airflow.scheduler.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "airflow.name" . }}
    app: {{ template "airflow.name" . }}
    chart: {{ template "airflow.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "airflow.name" . }}
      app: {{ template "airflow.name" . }}
      tier: {{ .Values.webScheduler.scheduler.name }}
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/cfgmap-airflow-cfg.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: {{ template "airflow.name" . }}
        app: {{ template "airflow.name" . }}
        tier: {{ .Values.webScheduler.scheduler.name }}
    spec:
      restartPolicy: Always
      serviceAccountName: {{ .Values.webScheduler.serviceAccountName }}
      containers:
        - name: {{ template "airflow.webserver.fullname" . }}
          image: {{ .Values.webScheduler.image }}:{{ .Values.webScheduler.tag }}
          imagePullPolicy: {{ .Values.webScheduler.imagePullPolicy }}
          volumeMounts:
          - name: {{ .Values.webScheduler.dagsVolumeClaim }} 
            mountPath: {{ .Values.webScheduler.dagsMountPath }}
            subPath: {{ .Values.dagVolume.dagSubPath }}
            readOnly: {{ .Values.webScheduler.scheduler.dagVolumeReadOnly }}
          - name: {{ .Values.webScheduler.logsVolumeClaim }}
            mountPath: {{ .Values.webScheduler.logsMountPath }}
            subPath: {{ .Values.logVolume.logSubPath }}
          - name: {{ .Values.webScheduler.airflowCfgConfigMap }}
            mountPath: {{ .Values.webScheduler.airflowCfgPath }}
            subPath: airflow.cfg
          - name: {{ .Values.secrets.key.kubeconfig }}
            mountPath: {{ .Values.webScheduler.scheduler.kubeconfigMountPath }}
          env:
           - name: SQL_ALCHEMY_CONN
             valueFrom:
               secretKeyRef:
                 name: {{ .Values.secrets.name }}
                 key: {{ .Values.secrets.key.sqlAlchemyConn }}
           - name: AIRFLOW__CORE__FERNET_KEY
             valueFrom:
               secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: {{ .Values.secrets.key.fernetKey }}
{{- if .Values.airflowCfg.core.remoteLogging }}
           - name: AIRFLOW__CORE__REMOTE_BASE_LOG_FOLDER
             valueFrom:
               secretKeyRef:
                 name: {{ .Values.secrets.name }}
                 key: "{{ .Values.secrets.key.gcsLogFolder }}"
{{ end }}    
          args: ["scheduler"]
      volumes:
        - name: {{ .Values.webScheduler.airflowCfgConfigMap }}
          configMap:
            name: "{{ .Values.webScheduler.airflowCfgConfigMap }}-{{ .Release.Time.Seconds }}"
        - name: {{ .Values.webScheduler.dagsVolumeClaim}} 
          persistentVolumeClaim:
            claimName: {{ .Values.webScheduler.dagsVolumeClaim }} 
            readOnly: {{ .Values.webScheduler.scheduler.dagVolumeReadOnly }}
        - name: {{ .Values.webScheduler.logsVolumeClaim }}  
          persistentVolumeClaim:
            claimName: {{ .Values.webScheduler.logsVolumeClaim }} 
        - name: {{ .Values.secrets.key.kubeconfig }}
          secret:
            secretName: {{ .Values.secrets.name }}
            items:
            - key: {{ .Values.secrets.key.kubeconfig }}
              path: {{ .Values.secrets.key.kubeconfig }}
{{- end -}}